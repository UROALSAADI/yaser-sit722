name: CI Pipeline - Testing Branch

on:
  push:
    branches: [ "testing" ]

env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install dependencies for each backend service
      - name: Install dependencies for customer_service
        run: |
          cd backend/customer_service
          pip install -r requirements.txt

      - name: Install dependencies for order_service
        run: |
          cd backend/order_service
          pip install -r requirements.txt

      - name: Install dependencies for product_service
        run: |
          cd backend/product_service
          pip install -r requirements.txt

      # Run tests for each service
      - name: Run tests for customer_service
        run: |
          cd backend/customer_service
          pytest -q

      - name: Run tests for order_service
        run: |
          cd backend/order_service
          pytest -q

      - name: Run tests for product_service
        run: |
          cd backend/product_service
          pytest -q

  build-and-push:
    runs-on: ubuntu-latest
    needs: test-backend
    if: success()
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io

      # Build and push backend Docker images for each service
      - uses: docker/build-push-action@v5
        with:
          context: ./backend/customer_service
          file: ./backend/customer_service/Dockerfile
          push: true
          tags: ${{ env.ACR_NAME }}.azurecr.io/customer_service:${{ env.IMAGE_TAG }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend/order_service
          file: ./backend/order_service/Dockerfile
          push: true
          tags: ${{ env.ACR_NAME }}.azurecr.io/order_service:${{ env.IMAGE_TAG }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend/product_service
          file: ./backend/product_service/Dockerfile
          push: true
          tags: ${{ env.ACR_NAME }}.azurecr.io/product_service:${{ env.IMAGE_TAG }}

      # Build and push frontend image
      - uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.ACR_NAME }}.azurecr.io/frontend:${{ env.IMAGE_TAG }}


